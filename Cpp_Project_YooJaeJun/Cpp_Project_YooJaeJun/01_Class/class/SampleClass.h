#pragma once
#include <iostream>
using namespace std;
// 클래스 템플릿 : 설정한 클래스 이름으로 .h, .cpp 생성됩니다.
// .h   : 설정한 클래스의 이름으로 이름으로 클래스가 선언됩니다.
// .cpp : .h 파일을 추가한 채로 생성됩니다.

// 길어지는 코드 때문에 .h 와 .cpp 를 따로 작성하여 프로그램을 완성합니다.
// .h   : 클래스 선언 및 멤버 변수, 함수의 선언을 작성합니다.
// .cpp : 멤버함수의 정의를 작성합니다.

// class
// 객체지향 프로그래밍을 하기 위해 struct 대신에 나온 기능입니다.
// struct 와 매우 유사한 것이 특징입니다.

// 접근제한자
// 객체들이 가지고 있는 속성을 보호하기 위해 생긴 기능입니다.
// 종류				기능
// private			해당 설계도에서만 접근이 가능한 멤버로 만듭니다.
// protected		해당 설계도와 상속받은 설계도에서만 접근이 가능한 멤버로 만듭니다.
// public			모든 외부에서 접근이 가능하도록 만듭니다.

// 은닉성 : 멤버들의 값을 공개하거나 숨기는 성질을 의미합니다.
//			접근제한자에 대한 속성입니다.
//			객체들의 멤버의 값을 보호하기 위한 성질입니다.


class SampleClass
{
	// struct 와 같은 경우 접근제한자를 명시하지 않는다면 멤버들은 public 이 됩니다.
	int Private = 0;

public:	// 외부에서 접근이 가능한 멤버로 설정합니다.
		// 해당 접근제한자 아래에 선언된 모든 멤버는 public 이 됩니다.
	int A = 10;

	void Print();

private :	// 외부에서 접근이 불가능한 멤버로 설정합니다.
			// 해당 접근제한자 아래에 선언된 모든 멤버는 private 가 됩니다.
	int B = 20;
};
